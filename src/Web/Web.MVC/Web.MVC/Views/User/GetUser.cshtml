@{
    ViewData["Title"] = $"{Model.UserName}";
}
@using Web.MVC.Constants
@model Web.MVC.Models.ApiResponses.CustUserResponses.UserResponse
<link rel="stylesheet" href="~/css/user/dropdown.css"/>
<link rel="stylesheet" href="~/css/user/navbar.css"/>
<link rel="stylesheet" href="~/css/user/GetUser.css"/>

<div class="get-user-page-container">
    <div>
        <div class="profile-navbar">
            <a class="active-navbar-link" asp-controller="User" asp-action="GetUser" asp-route-userName="@Model.UserName">профиль</a>
            <a class="profile-navbar-link" asp-controller="User" asp-action="GetUsersCreatedDiscussions" asp-route-userName="@Model.UserName"
               asp-route-pageNumber="1" asp-route-pageSize="20">обсуждения</a>
            <a class="profile-navbar-link" asp-controller="User" asp-action="GetUsersCreatedComments" asp-route-pageNumber="1" asp-route-pageSize="20"
               asp-route-userName="@Model.UserName">комментарии</a>
            @if (User.Identity.Name == Model.UserName || User.IsInRole(UserRoleConstants.AdminRole) || User.IsInRole(UserRoleConstants.ModeratorRole))
            {
                <a class="profile-navbar-link" asp-controller="Bookmark" asp-action="GetBookmarksByNovelty" asp-route-pageNumber="1" asp-route-pageSize="20"
                   asp-route-userName="@Model.UserName">
                    закладки
                </a>
            }
            <div class="dropdown">
                @if (User.Identity.Name == Model.UserName)
                {
                    @if (!User.IsInRole(UserRoleConstants.AdminRole) && !User.IsInRole(UserRoleConstants.ModeratorRole))
                    {
                        <div>
                            <button id="dropdownSuggestionsButton" class="open-dropdown-btn">предложения &#x25BC;</button>
                            <div id="dropdownSuggestionsList" class="dropdown-list">
                                <a class="dropdown-content" asp-controller="User" asp-action="GetUsersSuggestedComments" asp-route-pageNumber="1"
                                   asp-route-pageSize="20" asp-route-userName="@Model.UserName">комментарии</a>
                                <a class="dropdown-content" asp-controller="User" asp-action="GetUsersSuggestedDiscussions" asp-route-userName="@Model.UserName"
                                   asp-route-pageNumber="1" asp-route-pageSize="20">обсуждения</a>
                                <a class="dropdown-content" asp-controller="User" asp-action="GetUsersSuggestedTopics" asp-route-pageNumber="1"
                                   asp-route-pageSize="20" asp-route-userName="@Model.UserName">темы</a>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="dropdown">
                @if (User.IsInRole(UserRoleConstants.AdminRole) || User.IsInRole(UserRoleConstants.ModeratorRole))
                {
                    <div>
                        <button id="dropdownAdminButton" class="open-dropdown-btn">админ &#x25BC;</button>
                        <div id="dropdownAdminList" class="dropdown-list">
                            <a class="dropdown-content" asp-controller="Moderator" asp-action="GetSuggestedTopicsByUserName" asp-route-pageNumber="1"
                               asp-route-pageSize="20" asp-route-userName="@Model.UserName">предложенные темы</a>
                            <a class="dropdown-content" asp-controller="Moderator" asp-action="GetSuggestedDiscussionsByUserName"
                               asp-route-userName="@Model.UserName" asp-route-pageNumber="1" asp-route-pageSize="20">предложенные обсуждения</a>
                            <a class="dropdown-content" asp-controller="Moderator" asp-action="GetSuggestedCommentsByUserName" asp-route-pageNumber="1"
                               asp-route-pageSize="20" asp-route-userName="@Model.UserName">предложенные комментарии</a>
                            <a class="dropdown-content" asp-controller="Moderator" asp-action="GetReportsByUserName" asp-route-pageNumber="1"
                               asp-route-pageSize="20" asp-route-userName="@Model.UserName">жалобы</a>
                        </div>
                    </div>
                }
            </div>
        </div>

        <p class="highlited-user-name mb-3 increased-line">Имя пользователя: @Model.UserName</p>
        <p class="mb-1 increased-line">Роль: @ViewBag.UserRole</p>
        <p class="mb-1 increased-line">Зарегистрирован: @Model.RegisteredAt</p>
        <p class="mb-1 increased-line">Создано обсуждений: @Model.Posts</p>
        <p class="mb-3 increased-line">Ответов: @Model.Answers</p>
        @if (User.Identity.Name == Model.UserName || User.IsInRole(UserRoleConstants.AdminRole) || User.IsInRole(UserRoleConstants.ModeratorRole))
        {
            if (Model.IsBanned)
            {
                <div class="user-banned-info mb-3">
                    <p class="increased-line">Забанен по причине "@Model.BannedFor" до @Model.BannedUntil</p>
                    <p class="increased-line">Тип бана: @Model.BanType</p>
                </div>
            }
        }
        @if ((User.IsInRole(UserRoleConstants.AdminRole) || User.IsInRole(UserRoleConstants.ModeratorRole)) && User.Identity.Name != Model.UserName)
        {
            string returnUrl;
            if (Context.Request.QueryString.HasValue)
            {
                returnUrl = Context.Request.Path + Context.Request.QueryString;
            }
            else
            {
                returnUrl = Context.Request.Path;
            }
            <div class="two-links-user-container">
                <a asp-controller="Moderator" asp-action="BanUser" asp-route-userName="@Model.UserName" asp-route-returnUrl="@returnUrl">
                    Отстранить пользователя
                </a>
                @if (User.IsInRole(UserRoleConstants.AdminRole))
                {
                    <a asp-controller="Moderator" asp-action="ChangeUserRoles" asp-route-returnUrl="@returnUrl"
                       asp-route-aspNetUserId="@Model.AspNetUserId">Назначить роль</a>
                }
            </div>
        }
    </div>
    @if (User.Identity.Name == Model.UserName)
    {
        string returnUrl;
        if (Context.Request.QueryString.HasValue)
        {
            returnUrl = Context.Request.Path + Context.Request.QueryString;
        }
        else
        {
            returnUrl = Context.Request.Path;
        }
        <div class="two-links-user-container">
            <a asp-action="ChangeUserName" asp-controller="User" asp-route-returnUrl="@string.Empty" asp-route-userId="@Model.Id">Изменить имя</a>
            <a asp-controller="User" asp-action="ChangePassword" asp-route-returnUrl="@returnUrl" asp-route-userId="@Model.AspNetUserId">
                Изменить пароль
            </a>
        </div>
    }
</div>
<script src="~/js/user/dropdownUserAdmin.js"></script>
<script src="~/js/user/dropdownUserSuggestions.js"></script>