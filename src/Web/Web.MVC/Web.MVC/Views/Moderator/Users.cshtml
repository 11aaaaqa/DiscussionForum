@{
    ViewData["Title"] = "Список пользователей";
}
@model List<Web.MVC.Models.ApiResponses.ApNetUserResponses.AspNetUserResponse>
@using Web.MVC.Constants

<h3>Пользователи</h3>
@if (Model.Count == 0)
{
    var searchingTypes = new SelectList(new List<string>
    {
        UserSearchingTypeConstants.UserNameSearchingType, UserSearchingTypeConstants.EmailSearchingType
    }, UserSearchingTypeConstants.UserNameSearchingType);
    <form method="get">
        <input name="searchingQuery" placeholder="Поиск" />
        <input type="hidden" name="pageNumber" value="1" />
        <input type="hidden" name="pageSize" value="@ViewBag.CurrentPageSize" />
        <select name="searchingType" asp-items="@searchingTypes"></select>
        <input type="submit" value="найти" />
    </form>
    <h5>Список пользователей пуст</h5>
}
else
{
    var searchingTypes = new SelectList(new List<string>
    {
        UserSearchingTypeConstants.UserNameSearchingType, UserSearchingTypeConstants.EmailSearchingType
    }, UserSearchingTypeConstants.UserNameSearchingType);
    <form method="get">
        <input name="searchingQuery" placeholder="Поиск"/>
        <input type="hidden" name="pageNumber" value="1"/>
        <input type="hidden" name="pageSize" value="@ViewBag.CurrentPageSize" />
        <select name="searchingType" asp-items="@searchingTypes"></select>
        <input type="submit" value="найти"/>
    </form>
    <table>
        <tr><th>Имя пользователя</th><th>Почта</th><th>Подтверждена почта</th><th>Назначить роль</th></tr>
        @foreach (var user in Model)
        {
            if (Context.Request.QueryString.HasValue)
            {
                var returnUrl = Context.Request.Path + Context.Request.QueryString;
                <tr><th><a asp-controller="User" asp-action="GetUser" asp-route-userName="@user.UserName">@user.UserName</a></th><th>@user.Email</th><th>@user.EmailConfirmed</th><th><a asp-action="ChangeUserRoles" asp-controller="Moderator" asp-route-returnUrl="@returnUrl" asp-route-aspNetUserId="@user.Id">назначить роль</a></th></tr>
            }
            else
            {
                <tr><th><a asp-controller="User" asp-action="GetUser" asp-route-userName="@user.UserName">@user.UserName</a></th><th>@user.Email</th><th>@user.EmailConfirmed</th><th><a asp-action="ChangeUserRoles" asp-controller="Moderator" asp-route-returnUrl="@Context.Request.Path" asp-route-aspNetUserId="@user.Id">назначить роль</a></th></tr>
            }
            
        }
    </table>
}



@if (ViewBag.PreviousPageNumber != 0 && Model.Count != 0)
{
    @if (ViewBag.SearchingQuery is null)
    {
        <a asp-controller="Moderator" asp-action="Users" asp-route-pageNumber="@ViewBag.PreviousPageNumber" asp-route-pageSize="@ViewBag.CurrentPageSize">
            &lt; Назад
        </a>
    }
    else
    {
        <a asp-controller="Moderator" asp-action="Users" asp-route-pageNumber="@ViewBag.PreviousPageNumber" asp-route-pageSize="@ViewBag.CurrentPageSize"
           asp-route-searchingQuery="@ViewBag.SearchingQuery" asp-route-searchingType="@ViewBag.SearchingType">
            &lt; Назад
        </a>
    }
}
@if (ViewBag.DoesNextPageExist && Model.Count != 0)
{
    @if (ViewBag.SearchingQuery is null)
    {
        <a asp-controller="Moderator" asp-action="Users" asp-route-pageNumber="@ViewBag.NextPageNumber" asp-route-pageSize="@ViewBag.CurrentPageSize">
            Вперед &gt;
        </a>
    }
    else
    {
        <a asp-controller="Moderator" asp-action="Users" asp-route-pageNumber="@ViewBag.NextPageNumber" asp-route-pageSize="@ViewBag.CurrentPageSize"
           asp-route-searchingQuery="@ViewBag.SearchingQuery" asp-route-searchingType="@ViewBag.SearchingType">
            Вперед &gt;
        </a>
    }
}
    