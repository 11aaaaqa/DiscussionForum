// <auto-generated />
using System;
using CommentMicroservice.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CommentMicroservice.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250103151922_Initaitail")]
    partial class Initaitail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CommentMicroservice.Api.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DiscussionId")
                        .HasColumnType("uuid");

                    b.Property<string>("RepliedOnCommentContent")
                        .HasColumnType("text");

                    b.Property<string>("RepliedOnCommentCreatedBy")
                        .HasColumnType("text");

                    b.Property<Guid?>("RepliedOnCommentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CommentMicroservice.Api.Models.SuggestedComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DiscussionId")
                        .HasColumnType("uuid");

                    b.Property<string>("RepliedOnCommentContent")
                        .HasColumnType("text");

                    b.Property<string>("RepliedOnCommentCreatedBy")
                        .HasColumnType("text");

                    b.Property<Guid?>("RepliedOnCommentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("SuggestedComments");
                });
#pragma warning restore 612, 618
        }
    }
}
