version: '3.4'

services: 
    web-mvc:
       image: ${DOCKER_REGISTRY-}web-mvc
       build: 
         context: .
         dockerfile: src/Web/Web.MVC/Web.MVC/Dockerfile
       ports:
         - "1212:80"
         - "1213:443"
       environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=https://+:443;http://+:80
        - ASPNETCORE_HTTPS_PORT=1213
       depends_on:
         - register-microservice-api
         - gateway-api
       volumes:
         - ${APPDATA}/Microsoft/UserSecrets/:/root/.microsoft/usersecrets
         - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https/
    
    gateway-api:
      image: ${DOCKER_REGISTRY-}gateway-api
      build:
        context: .
        dockerfile: src/Gateway/Gateway.Api/Dockerfile
      ports:
        - "7422:8080"
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:8080

    register-microservice-api:
      image: ${DOCKER_REGISTRY-}register-microservice-api
      build: 
        context: .
        dockerfile: src/Microservices/Register/RegisterMicroservice.Api/Dockerfile
      ports:
        - "2211:8080"
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:8080
      depends_on:
        - postgres-register-microservice
        - rabbitmq
        - gateway-api

    user-microservice-api:
      image: ${DOCKER_REGISTRY-}user-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/User/UserMicroservie.Api/Dockerfile
      ports:
        - "1122:8080"
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:8080
      depends_on:
        - postgres-user-microservice
        - rabbitmq
        - gateway-api

    topic-microservice-api:
      image: ${DOCKER_REGISTRY-}topic-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/Topic/TopicMicroservice.Api/Dockerfile
      ports:
        - "5365:8080"
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:8080
      depends_on:
        - postgres-topic-microservice
        - rabbitmq
        - gateway-api

    discussion-microservice-api:
      image: ${DOCKER_REGISTRY-}discussion-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/Discussion/DiscussionMicroservice.Api/Dockerfile
      ports: 
        - "9054:8080"
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:8080
      depends_on:
        - postgres-discussion-microservice
        - rabbitmq
        - gateway-api

    comment-microservice-api:
      image: ${DOCKER_REGISTRY-}comment-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/Comment/CommentMicroservice.Api/Dockerfile
      ports:
        - "1045:8080"
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:8080
      depends_on:
        - rabbitmq
        - postgres-comment-microservice
        - gateway-api

    report-microservice-api:
      image: ${DOCKER_REGISTRY-}report-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/Report/ReportMicroservice/Dockerfile
      ports:
        - "1218:8080"
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:8080
      depends_on:
        - rabbitmq
        - postgres-report-microservice
        - gateway-api

    banhistory-microservice-api:
      image: ${DOCKER_REGISTRY-}banhistory-microservice-api
      build:
        context: .
        dockerfile: src/Microservices/BanHistory/BanHistoryMicroservice.Api/Dockerfile
      ports:
        - "2058:8080"
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:8080
      depends_on:
        - rabbitmq
        - postgres-banhistory-microservice
        - gateway-api

    bookmark-microservice-api:
      image: ${DOCKER_REGISTRY-}bookmark-microservice-api
      build:
         context: .
         dockerfile: src/Microservices/Bookmark/BookmarkMicroservice.Api/Dockerfile
      ports:
         - "5592:8080"
      environment:
         - ASPNETCORE_ENVIRONMENT=Development
         - ASPNETCORE_URLS=http://+:8080
      depends_on:
         - rabbitmq
         - postgres-bookmark-microservice
         - gateway-api

    postgres-bookmark-microservice:
      container_name: postgres-bookmark-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: BookmarkMicroservice
        POSTGRES_HOST: postgres-bookmark-microservice
      volumes: 
        - postgres-bookmark-data:/var/lib/postgresql/data

    postgres-banhistory-microservice:
      container_name: postgres-banhistory-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: BanHistoryMicroservice
        POSTGRES_HOST: postgres-banhistory-microservice
      volumes: 
        - postgres-banhistory-data:/var/lib/postgresql/data

    postgres-report-microservice:
      container_name: postgres-report-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: ReportMicroservice
        POSTGRES_HOST: postgres-report-microservice
      volumes: 
        - postgres-report-data:/var/lib/postgresql/data

    postgres-comment-microservice:
      container_name: postgres-comment-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: CommentMicroservice
        POSTGRES_HOST: postgres-comment-microservice
      volumes: 
        - postgres-comment-data:/var/lib/postgresql/data

    postgres-discussion-microservice:
      container_name: postgres-discussion-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: DiscussionMicroservice
        POSTGRES_HOST: postgres-discussion-microservice
      volumes: 
        - postgres-discussion-data:/var/lib/postgresql/data

    postgres-topic-microservice:
      container_name: postgres-topic-microservice
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: TopicMicroservice
        POSTGRES_HOST: postgres-topic-microservice
      volumes: 
        - postgres-topic-data:/var/lib/postgresql/data

    postgres-register-microservice:
       container_name: postgres-register-microservice
       image: postgres:latest
       expose:
        - 5432
       environment:
         POSTGRES_USER: postgres
         POSTGRES_PASSWORD: postgres
         POSTGRES_DB: RegisterMicroservice
         POSTGRES_HOST: postgres-register-microservice
       volumes: 
         - postgres-register-data:/var/lib/postgresql/data

    postgres-user-microservice:
       container_name: postgres-user-microservice
       image: postgres:latest
       expose:
        - 5432
       environment:
         POSTGRES_USER: postgres
         POSTGRES_PASSWORD: postgres
         POSTGRES_DB: UserMicroservice
         POSTGRES_HOST: postgres-user-microservice
       volumes: 
         - postgres-user-data:/var/lib/postgresql/data

    postgres-hangfire:
      container_name: postgres-hangfire
      image: postgres:latest
      expose:
        - 5432
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: Hangfire
        POSTGRES_HOST: postgres-hangfire
      volumes: 
        - postgres-hangfire-data:/var/lib/postgresql/data

    rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq
        restart: always
        environment:
            - RABBITMQ_DEFAULT_USER=rmuser
            - RABBITMQ_DEFAULT_PASS=rmpassword
            - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
        volumes:
            - ./rabbitmq:/var/lib/rabbitmq/mnesia
        ports:
            - 15672:15672
            - 5672:5672

    prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
        - 9090:9090
      command:
        - --config.file=/etc/prometheus/prometheus.yml
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
        - prometheus-data:/prometheus

    grafana:
      image: grafana/grafana-enterprise
      container_name: grafana
      restart: unless-stopped
      ports:
        - '3000:3000'
      environment:
        - GF_DATABASE_TYPE=postgres
        - GF_DATABASE_HOST=postgres-grafana:5432
        - GF_DATABASE_NAME=DicussionForumGrafana
        - GF_DATABASE_USER=postgres
        - GF_DATABASE_PASSWORD=postgres
      volumes:
        - grafana-data:/var/lib/grafana

    postgres-grafana:
      image: postgres:latest
      container_name: postgres-grafana
      environment:
        - POSTGRES_DB=DicussionForumGrafana
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      volumes:
        - postgres-grafana-data:/var/lib/postgresql/data

    nginx: 
      image: nginx:latest
      container_name: nginx
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./nginx/cert.crt:/etc/nginx/cert.crt
        - ./nginx/cert.rsa:/etc/nginx/cert.rsa
      ports:
        - 7315:80
        - 7316:443

volumes:
  postgres-bookmark-data: {}
  postgres-banhistory-data: {}
  postgres-report-data: {}
  postgres-comment-data: {}
  postgres-discussion-data: {}
  postgres-topic-data: {}
  postgres-register-data: {}
  postgres-user-data: {}
  postgres-hangfire-data: {}
  postgres-grafana-data: {}
  prometheus-data: {}
  grafana-data: {}


